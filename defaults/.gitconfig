[user]
user =
email =

[credential]
helper = store

[commit]
gpgsign = false

[gpg]
program = gpg

[pull]
rebase = false

[merge]
conflictstyle = diff3

[diff]
colorMoved = default

[alias]
# basics
cf = config
h = help
ii = init
ui = !lazygit
# summary
cnt = rev-list --count HEAD
sum = !onefetch
# helper
cmpr = repack -a -d -f --depth=300 --window=300 --window-memory=1g
# clone
cln = clone
cln-clean = cln --depth 1 --no-checkout
# add
a = add
aa = a --all
# branch
br = branch
br-ls = br --all
br-rm = br --delete
br-rm-rmt = br --delete --remotes
br-clean = "!f(){ git branch -D $(git branch --list '${1}*') };f"
default = "!f(){ git remote show origin | grep 'HEAD branch' | cut -d ' ' -f5; };f"
# commit
c = commit
ci = c --interactive
# checkout
co = checkout
cob = co -b
# clean
cl = clean
cl-ign = !git rm -rf --cached . && git add .
ls-blob = !"git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | grep 'blob' | sort -k 2 -n"
ls-blob-10 = !"git ls-blob | tail -n 10"
# diff
df = diff
# fetch
f = fetch
# grep
gr = grep
grn = gr --line-number
# log
lg = log
lgg = lg --graph
lgo = lg --oneline
lgor = lgo --oneline --reverse
# ls-files
ls = ls-files
lsd = ls --debug
lsfn = ls --full-name
# merge
m = merge
# pull
p = pull
pup = pull upstream
sync = "!f(){ git pull upstream ${1} && git push origin ${1}; };f"
# push
ps = push
publish = push -u origin
# rebase
rb = rebase
rbi = rebase --interactive
# reset
undo = reset --soft HEAD^
squash = reset --soft
squash-n = "!f(){ git reset --soft HEAD~${1}; };f"
# revert
rv = revert
# status
st = status
# tag
tg = tag
tg-rm = tg --delete
tg-rm-rmt = push origin --delete
tg-ls = tg --list
tg-cl = tg --cleanup
tg-edit = tg --edit
tg-annot = tg --annotate
# origin
org-add = remote add origin
org-add-url = remote set-url
org-rnm = remote rename origin

# [http]
# version = HTTP/1.1
# proxy = http://127.0.0.1:7890

# [https]
# proxy = https://127.0.0.1:7890
